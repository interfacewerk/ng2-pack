{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng2-pack/lib/inline-editable/inline-editable.directive.ts","ng://ng2-pack/lib/inline-editable/inline-editable.module.ts","ng://ng2-pack/lib/pipes/default-value/default-value.pipe.ts","ng://ng2-pack/lib/locales/en.ts","ng://ng2-pack/lib/locales/de.ts","ng://ng2-pack/lib/services/i18n.service.ts","ng://ng2-pack/lib/pipes/t/t.pipe.ts","ng://ng2-pack/lib/pipes/pipes.module.ts","ng://ng2-pack/lib/sortable/sortable-item.directive.ts","ng://ng2-pack/lib/sortable/sortable.module.ts","ng://ng2-pack/lib/table/column-state.class.ts","ng://ng2-pack/lib/table/table-init.service.ts","ng://ng2-pack/lib/table/table-sorting.service.ts","ng://ng2-pack/lib/table/table.component.ts","ng://ng2-pack/lib/table/tbody/tbody.component.ts","ng://ng2-pack/lib/table/thead/thead.component.ts","ng://ng2-pack/lib/table/th/th.component.ts","ng://ng2-pack/lib/table/pipes/format-column.pipe.ts","ng://ng2-pack/lib/table/td/td.component.ts","ng://ng2-pack/lib/table/add-column/add-column.component.ts","ng://ng2-pack/lib/select2/select2.component.ts","ng://ng2-pack/lib/table/table.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","KeyCodes","Enter","Escape","InlineEditableDirective","element","renderer","this","onEnter","EventEmitter","contentEditable","Object","defineProperty","prototype","isEnabled","startEditing","originalContent","content","keyPressed","event","keyCode","stopPropagation","emit","cancelEditing","nativeElement","textContent","trim","setElementProperty","Directive","args","selector","ElementRef","Renderer","Input","Output","HostBinding","HostListener","InlineEditableModule","NgModule","declarations","exports","DefaultValuePipe","transform","defaultValue","isEmptyString","Pipe","name","en","table","sort","addLeft","addRight","subFields","removeColumn","typeToSearch","de","I18nService","language","translations","get","nestedKey","console","keys","split","translation","reduce","translationTree","key","err","Injectable","TPipe","i18nService","dragSource","originalNextSibling","PipesModule","SortableItemDirective","elementRef","draggable","droppable","dropArea","lastEvent","updateElements","dragged","droppedOn","parent","parentNode","draggedEl","dropEl","draggedIndex","Array","indexOf","children","dropIndex","insertBefore","nextSibling","previousSibling","onDragStart","dragEvent","dataTransfer","effectAllowed","warn","onDragEnter","preventDefault","onDragOver","dragOverEvent","onDragEnd","undefined","onDrop","dropEvent","SortableModule","ColumnState","config","_currentSortDirection","activeFields","initialSortDirection","direction","toggleDirection","currentSortDirection","TableInitService","detectColumnConfiguration","rows","columnsLookup","detectColumnLookup","columnsLookup2Config","forEach","row","columnConfig","id","sortType","sortingDisabled","columnsConfig2Lookup","columnsConfig","filter","subfield","isVisible","map","columnState","columnName","hasOwnProperty","sortingCompare","number","a","b","string","localeCompare","other","TableSortingService","cmpFn","sortCompare","reverse","TableDefaults","InjectionToken","tableDefaultValues","reorderingEnabled","rowsSortingMode","inlineEditingEnabled","changeColumnVisibility","TableComponent","tableSortingService","tableInitService","defaults","addColumn","sortColumn","reorderColumns","rowClick","visibleColumnsChange","editCell","toggleSubfield","customTemplate","_columnsConfig","_visibleColumns","visibleColumns","ngOnChanges","arg","initializeDefaults","initialSort","ngAfterViewInit","_this","setTimeout","isSorted","column","sortedColumnName","directionMatch","onRowClicked","rowClickEvent","onSortColumn","sortEvent","sortRows","onAddingColumn","index","addingColumnIndex","onReorderColumns","reorderColumnsEvent","onToggleSubfield","toggleSubfieldEvent","initialSortColumn","slice","sortDirection","isWithoutData","_a","Component","template","encapsulation","ViewEncapsulation","None","providers","provide","useValue","Inject","TbodyComponent","tableComponent","customCells","cellTemplates","isEditable","delegateInput","_rows","_columnsLookup","rowIndex","rowObject","onEditCell","tdComponent","isChanged","editCellEvent","newValue","propertyName","decorators","type","Optional","TheadComponent","changeDetectorRef","addingColumn","lastColumnComboboxActive","ngOnInit","initializeSortable","_reorderingEnabled","selectNewColumn","item","atPosition","toggleCombobox","jQuery","scrollLeft","onAddCombobox","sortable","cursor","axis","tolerance","items","handle","update","draggedColumnId","sortedIDs","attribute","detectChanges","disableSelection","ChangeDetectorRef","ThComponent","changeVisibility","addCombobox","_rowsSortingMode","isSortingDisabled","showSortIcon","onRemoveColumn","columnIndex","subfieldName","subfieldIndex","splice","activeSubfields","FormatColumnPipe","defaultValuePipe","formattedValue","applyFormatters","formatters","currentValue","formatter","apply","TdComponent","formatColumnPipe","contentDiv","cellValue","ViewChild","static","AddColumnComponent","open","selected","close","columns","columnsNotVisibleInTable","categorizeColumns","onSelected","text","category","category2Index","options","categoryId","categoryIndex","option","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","Select2Component","multi","placeholder","onChange","v","onTouched","updateData","ngOnDestroy","removeSelect2","writeValue","val","trigger","registerOnChange","fn","registerOnTouched","onClose","off","select2","remove","attr","on","appendChild","data","multiple","tags","TableModule","imports","CommonModule","FormsModule","DropdownModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  ElementRef,\n  EventEmitter,\n  Directive,\n  Input,\n  Output,\n  HostBinding,\n  HostListener,\n  Renderer,\n} from '@angular/core';\n\nenum KeyCodes {\n  Enter = 13,\n  Escape = 27\n}\n\n@Directive({\n  selector: '[iwInlineEditable]'\n})\nexport class InlineEditableDirective {\n  @Input('iwInlineEditable') set iwInlineEditable(isEnabled: boolean) {\n    this.contentEditable = isEnabled;\n  };\n\n  // @Input() set triggerEvent(triggerEvent: string) {\n  //   if (!this.element) {\n  //     return;\n  //   }\n  //   console.log(triggerEvent, this.element);\n  //   this.renderer.listen(this.element.nativeElement, triggerEvent, () => {\n  //     this.contentEditable = true;\n  //   });\n  // }\n\n  @Output() onEnter: EventEmitter<string> = new EventEmitter<string>();\n\n  @HostBinding('attr.contenteditable') contentEditable: boolean = true;\n\n  originalContent: string;\n\n  @HostListener('focus') startEditing() {\n    this.originalContent = this.content;\n  }\n\n  @HostListener('keydown', ['$event']) keyPressed(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.stopPropagation();\n        this.onEnter.emit(this.content);\n        break;\n\n      case KeyCodes.Escape:\n        this.cancelEditing();\n        break;\n    }\n  }\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer\n  ) { }\n\n  get isChanged(): boolean {\n    return this.originalContent !== this.content;\n  }\n\n  get content(): string {\n    return this.element.nativeElement.textContent.trim();\n  }\n\n  set content(content: string) {\n    this.renderer.setElementProperty(this.element, 'innerText', content);\n  }\n\n  cancelEditing() {\n    this.content = this.originalContent;\n  }\n}\n","import {InlineEditableDirective} from './inline-editable.directive';\n\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  declarations: [\n    InlineEditableDirective\n  ],\n  exports: [\n    InlineEditableDirective,\n  ]\n})\nexport class InlineEditableModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'defaultValue'\n})\nexport class DefaultValuePipe implements PipeTransform {\n  transform(value: any, defaultValue: any = 'â', args?: any): any {\n    if (typeof value !== 'undefined' && !this.isEmptyString(value)) {\n      return value;\n    }\n    return defaultValue;\n  }\n\n  private isEmptyString(value: any) {\n    return typeof value === 'string' && value.trim() === '';\n  }\n}\n","import {I18nLocale} from '../services/i18n.service';\n\nexport const en = {\n  table: {\n    sort: 'Sort',\n    addLeft: 'Add column to the left',\n    addRight: 'Add column to the right',\n    subFields: 'Subfields in the column',\n    removeColumn: 'Remove this column',\n    typeToSearch: 'Type to search',\n  }\n} as I18nLocale;\n","import {I18nLocale} from '../services/i18n.service';\n\nexport const de = {\n  table: {\n    sort: 'Sortieren',\n    addLeft: 'Spalte links hinzufÃ¼gen',\n    addRight: 'Spalte rechts hinzufÃ¼gen',\n    subFields: 'Felder in der Spalte',\n    removeColumn: 'Diese Spalte entfernen',\n    typeToSearch: 'Tippen zum Suchen',\n  }\n} as I18nLocale;\n","import { Injectable } from '@angular/core';\nimport { en, de } from '../locales';\n\nexport interface I18nLocales {\n  [language: string]: I18nLocale;\n}\n\nexport interface I18nLocale {\n  [key: string]: I18nLocale | string;\n}\n\n@Injectable()\nexport class I18nService {\n  language: string = 'en';\n  translations: I18nLocales = {\n    en,\n    de\n  };\n\n  constructor() { }\n\n  get(nestedKey: string, language: string = this.language): string {\n    if (!this.translations) {\n      console.error('I18nService is used without initialization with translations');\n      return '';\n    }\n    let keys: string[] = nestedKey.split('.');\n    let translation: string = '';\n    try {\n      translation = <string>keys\n        .reduce((translationTree: I18nLocale, key: string) => {\n          return translationTree[key];\n        }, this.translations[language]);\n    } catch (err) {\n      console.error(`Unknown key \"${nestedKey}\" was used!`);\n    }\n    return translation;\n  }\n}\n","import {I18nService} from './../../services/i18n.service';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 't'\n})\nexport class TPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value: any, args?: any): any {\n    return this.i18nService.get(value);\n  }\n\n}\n","import {DefaultValuePipe} from './default-value/default-value.pipe';\nimport {TPipe} from './t/t.pipe';\n\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  declarations: [\n    DefaultValuePipe,\n    TPipe,\n  ],\n  exports: [\n    DefaultValuePipe,\n    TPipe,\n  ]\n})\nexport class PipesModule {}\n","import {\n  ElementRef,\n  Directive,\n  HostBinding,\n  HostListener,\n  Input\n} from '@angular/core';\n\nlet dragSource: SortableItemDirective;\nlet originalNextSibling: Element | undefined;\n\n@Directive({\n  selector: '[iwSortableItem]'\n})\nexport class SortableItemDirective {\n  @HostBinding('attr.draggable') draggable: boolean = true;\n  @HostBinding('attr.droppable') droppable: boolean = true;\n  @Input() dropArea: string = 'defaultDropArea';\n\n  private lastEvent: string = '';\n\n  constructor(public elementRef: ElementRef) {\n  }\n\n  // draggable\n  @HostListener('dragstart', ['$event'])\n  onDragStart(dragEvent: DragEvent) {\n    if (!dragEvent.dataTransfer) {\n      console.warn('no data transfer');\n      return;\n    }\n    dragEvent.dataTransfer.effectAllowed = 'move';\n    dragSource = this;\n    originalNextSibling = this.elementRef.nativeElement.nextSibling;\n  }\n\n  // droppable\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(dragEvent: DragEvent) {\n    this.lastEvent = 'dragenter';\n    dragEvent.preventDefault();\n    if (dragSource !== this && dragSource.dropArea === this.dropArea) {\n      // updating is only preview, it is undone if it is not finished by the drop event\n      this.updateElements(dragSource, this);\n    }\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver(dragOverEvent: DragEvent) {\n    // necessary for drop event to be triggered\n    dragOverEvent.preventDefault();\n  }\n\n  // droppable\n  @HostListener('dragend', ['$event'])\n  onDragEnd(dragEvent: DragEvent) {\n    if (this.lastEvent === 'drop') { return; }\n    if (dragSource.dropArea === this.dropArea && typeof originalNextSibling !== 'undefined') {\n      originalNextSibling.parentNode!.insertBefore(dragSource.elementRef.nativeElement, originalNextSibling);\n      originalNextSibling = undefined;\n    }\n  }\n\n  // droppable\n  @HostListener('drop', ['$event'])\n  onDrop(dropEvent: DragEvent) {\n    this.lastEvent = 'drop';\n    dropEvent.stopPropagation();\n    if (this === dragSource) {\n      return;\n    }\n    // this.updateElements(dragSource, this);\n    originalNextSibling = undefined;\n  }\n\n  private updateElements = (dragged: SortableItemDirective, droppedOn: SortableItemDirective) => {\n    let parent: Element = droppedOn.elementRef.nativeElement.parentNode;\n    let draggedEl: Element = dragged.elementRef.nativeElement;\n    let dropEl: Element = droppedOn.elementRef.nativeElement;\n    let draggedIndex = Array.prototype.indexOf.call(parent.children, draggedEl);\n    let dropIndex = Array.prototype.indexOf.call(parent.children, dropEl);\n    if (draggedIndex === dropIndex) {\n      // do nothing\n    } else if (draggedIndex < dropIndex) {\n      parent.insertBefore(draggedEl, dropEl.nextSibling || dropEl);\n    } else {\n      parent.insertBefore(draggedEl, dropEl.previousSibling || dropEl);\n    }\n  }\n}\n","import { SortableItemDirective } from './sortable-item.directive';\n\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  declarations: [\n    SortableItemDirective\n  ],\n  exports: [\n    SortableItemDirective\n  ]\n})\nexport class SortableModule {}\n","import {ColumnConfig, SortDirection} from './types';\n\nexport class ColumnState {\n  // config is read-only, state is stored in other properties\n  constructor (\n    public readonly config: ColumnConfig,\n    private _currentSortDirection?: SortDirection,\n    public activeFields: string[] = []\n  ) {}\n\n  get initialSortDirection(): SortDirection {\n    return this.config.initialSortDirection || 'asc';\n  }\n\n  get currentSortDirection(): SortDirection {\n    return this._currentSortDirection || 'asc';\n  }\n\n  set currentSortDirection(direction: SortDirection) {\n    this._currentSortDirection = direction;\n  }\n\n  toggleDirection() {\n    if (!this._currentSortDirection) {\n      this.currentSortDirection = this.initialSortDirection;\n    } else {\n      this.currentSortDirection = this.currentSortDirection === 'desc' ? 'asc' : 'desc';\n    }\n    return this.currentSortDirection;\n  }\n\n}\n","import {ColumnState} from './column-state.class';\nimport {ColumnConfig, ColumnLookup, Row} from './types';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TableInitService {\n\n  constructor() { }\n\n  detectColumnConfiguration(rows: Row[]): [ColumnLookup, ColumnConfig[]] {\n    let columnsLookup = this.detectColumnLookup(rows);\n    return [columnsLookup, this.columnsLookup2Config(columnsLookup)];\n  }\n\n  detectColumnLookup(rows: Row[]): ColumnLookup {\n    let columnsLookup: ColumnLookup = {};\n    rows.forEach(row => {\n      Object.keys(row).forEach(key => {\n        if (typeof columnsLookup[key] === 'undefined') {\n          let columnConfig: ColumnConfig = {\n            id: key,\n            sortType: typeof row[key],\n            sortingDisabled: false,\n            initialSortDirection: 'asc'\n          };\n          columnsLookup[key] = new ColumnState(columnConfig);\n        }\n      });\n    });\n    return columnsLookup;\n  }\n\n  columnsConfig2Lookup(columnsConfig: ColumnConfig[]): ColumnLookup {\n    let columnsLookup: ColumnLookup = {};\n    columnsConfig.forEach((columnConfig) => {\n      let activeFields: string[] = [];\n      if (typeof columnConfig.subFields !== 'undefined') {\n        activeFields = columnConfig.subFields\n          .filter((subfield) => subfield.isVisible)\n          .map((subfield) => subfield.id);\n      }\n      let columnState = new ColumnState(columnConfig);\n      columnState.activeFields = activeFields;\n      columnsLookup[columnConfig.id] = columnState;\n    });\n\n    return columnsLookup;\n  }\n\n  columnsLookup2Config(columnsLookup: ColumnLookup): ColumnConfig[] {\n    let columnsConfig: ColumnConfig[] = [];\n    for (let columnName in columnsLookup) {\n      if (columnsLookup.hasOwnProperty(columnName)) {\n        columnsConfig.push(columnsLookup[columnName].config);\n      }\n    }\n\n    return columnsConfig;\n  }\n}\n","import {ColumnState} from './column-state.class';\nimport {CompareFunctions, Row} from './types';\n\nimport {Injectable} from '@angular/core';\n\nexport interface Sorting {\n  sort(rows: Row[], columnState: ColumnState): any[];\n}\n\nexport const sortingCompare: CompareFunctions = {\n  number: (a: number, b: number): number => a - b,\n  string: (a: string, b: string): number => {\n    if (typeof a === 'undefined') { return -1; }\n    return a.localeCompare(b);\n  },\n  other: (a: any, b: any): number => {\n    if (a > b) { return 1; }\n    if (b > a) { return -1; }\n    return 0;\n  }\n};\n\n@Injectable()\nexport class TableSortingService {\n  sort(rows: Row[], columnState: ColumnState) {\n    let sortType = columnState.config.sortType || 'other';\n    let cmpFn = columnState.config.sortCompare || sortingCompare[sortType];\n    if (!cmpFn) {\n      console.warn(`Unsupported sorting type '${sortType}' was used. ` +\n        'Using comparison operators: greater, less and equal (>, <, ===)'\n      );\n      cmpFn = sortingCompare['other'];\n    }\n    rows.sort((a: any, b: any) => cmpFn(a[columnState.config.id], b[columnState.config.id]));\n    if (columnState.currentSortDirection === 'desc') {\n      rows.reverse();\n    }\n\n    return rows;\n  }\n}\n","import {ColumnState} from './column-state.class';\nimport {I18nService} from './../services/i18n.service';\nimport {TableInitService} from './table-init.service';\nimport {ColumnConfig, ColumnLookup, SortDirection, Row, SortingMode} from './types';\nimport { EditCellEvent, RowClickEvent, ToggleSubfieldEvent, SortColumnEvent } from './events';\nimport {TableSortingService} from './table-sorting.service';\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Inject,\n  OnChanges,\n  Output,\n  ViewEncapsulation,\n  InjectionToken,\n} from '@angular/core';\n\ndeclare var jQuery: any;\n\nexport interface TableDefaultValues {\n  reorderingEnabled: boolean;\n  rowsSortingMode: SortingMode;\n  inlineEditingEnabled: boolean;\n  changeColumnVisibility: boolean;\n  language: string;\n}\n\nexport const TableDefaults = new InjectionToken('TableDefaults');\nexport const tableDefaultValues: TableDefaultValues = {\n  reorderingEnabled: true,\n  rowsSortingMode: 'default',\n  inlineEditingEnabled: false,\n  changeColumnVisibility: true,\n  language: 'en',\n};\n\n@Component({\n  selector: 'iw-table',\n  templateUrl: 'table.component.html',\n  styleUrls: ['./table.component.scss'],\n  // TODO: enable encapsulation again\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {provide: TableDefaults, useValue: tableDefaultValues}\n  ]\n})\nexport class TableComponent implements AfterViewInit, OnChanges {\n  @Input() set columnsConfig(columnsConfig: ColumnConfig[]) {\n    this._columnsConfig = columnsConfig;\n    this.columnsLookup = this.tableInitService.columnsConfig2Lookup(this.columnsConfig);\n  }\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    this._visibleColumns = visibleColumns;\n    this.visibleColumnsChange.emit(this._visibleColumns);\n  }\n\n  @Input() rows: Row[];\n  @Input() reorderingEnabled: boolean;\n  @Input() changeColumnVisibility: boolean;\n  @Input() rowsSortingMode: SortingMode;\n  @Input() inlineEditingEnabled: boolean;\n  // @Input() columnsForAddingFn: (availableColumns: ColumnConfig[]) => any[] = (id) => id\n  @Input() set language(language: string) {\n    this.i18nService.language = language;\n  }\n  @Input() initialSortColumn: string | undefined;\n\n  @Output() addColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() removeColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() sortColumn: EventEmitter<SortColumnEvent> = new EventEmitter<SortColumnEvent>();\n  // @Output() addingColumn: EventEmitter<number> = new EventEmitter<number>();\n  @Output() reorderColumns: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() rowClick: EventEmitter<RowClickEvent> = new EventEmitter<RowClickEvent>();\n  @Output() visibleColumnsChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() editCell: EventEmitter<EditCellEvent> = new EventEmitter<EditCellEvent>();\n  @Output() toggleSubfield: EventEmitter<ToggleSubfieldEvent> = new EventEmitter<ToggleSubfieldEvent>();\n\n  columnsLookup: ColumnLookup;\n  addingColumnIndex: number;\n  customTemplate: boolean = false;\n  sortedColumnName: string | null;\n\n  private _visibleColumns: string[];\n  private _columnsConfig: ColumnConfig[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private tableSortingService: TableSortingService,\n    private tableInitService: TableInitService,\n    private i18nService: I18nService,\n    @Inject(TableDefaults) defaults: any,\n  ) {\n    this.reorderingEnabled =  defaults.reorderingEnabled;\n    this.rowsSortingMode =  defaults.rowsSortingMode;\n    this.inlineEditingEnabled =  defaults.inlineEditingEnabled;\n    this.changeColumnVisibility =  defaults.changeColumnVisibility;\n    this.language = defaults.language;\n  }\n\n  ngOnChanges(arg: any) {\n    this.initializeDefaults();\n    this.initialSort();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.customTemplate = this.elementRef.nativeElement.children.length !== 1;\n    });\n  }\n\n  get visibleColumns() {\n    return this._visibleColumns;\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig;\n  }\n\n  isSorted(column: ColumnState, direction: string) {\n    if (!column) { return; }\n    let isSorted: boolean = column.config.id === this.sortedColumnName;\n    if (!direction) {\n      return isSorted;\n    } else {\n      let directionMatch: boolean = column.currentSortDirection === direction;\n      return isSorted && directionMatch;\n    }\n  }\n\n  onRowClicked(rowClickEvent: RowClickEvent) {\n    this.rowClick.emit(rowClickEvent);\n  }\n\n  onSortColumn(sortEvent: SortColumnEvent) {\n    this.sortColumn.emit(sortEvent);\n    if (this.rowsSortingMode === 'default') {\n      this.sortRows(this.rows, sortEvent);\n    }\n  }\n\n  onAddingColumn(index: number) {\n    this.addingColumnIndex = index;\n    // TODO: this should emit also when adding to the last column!\n    // this.addingColumn.emit(index);\n  }\n\n  onReorderColumns(reorderColumnsEvent: string[]) {\n    this.reorderColumns.emit(reorderColumnsEvent);\n  }\n\n  onToggleSubfield(toggleSubfieldEvent: ToggleSubfieldEvent) {\n    this.toggleSubfield.emit(toggleSubfieldEvent);\n  }\n\n  sortRows(rows: any[], sortEvent: SortColumnEvent): Row[] {\n    let {column, direction} = sortEvent;\n    this.rows = this.tableSortingService.sort(\n      rows, this.columnsLookup[column]\n    );\n    this.sortedColumnName = column;\n    return this.rows;\n  }\n\n  initialSort() {\n    if (!this.initialSortColumn || !this.rows) {\n      return;\n    }\n    let columnName = this.initialSortColumn.slice(1);\n    let sortDirection: string = 'asc';\n    if (this.initialSortColumn[0] === '+') {\n      // pluas at the beginning means 'asc'\n      sortDirection = 'asc';\n\n    } else if (this.initialSortColumn[0] === '-') {\n      // minus at the beginning means 'desc'\n      sortDirection = 'desc';\n    } else {\n      // direction sign is optional\n      columnName = this.initialSortColumn;\n    }\n    let columnState = this.columnsLookup[columnName];\n    if (columnState) {\n      sortDirection = sortDirection || columnState.initialSortDirection;\n      columnState.currentSortDirection = <SortDirection>sortDirection;\n      // initial sort\n      if (this.rowsSortingMode === 'default') {\n        this.sortRows(this.rows, {column: columnName, direction: sortDirection});\n      } else {\n        this.onSortColumn({column: columnName, direction: sortDirection});\n      }\n    } else {\n      console.warn('Missing configuration for column: ' + columnName);\n    }\n    this.sortedColumnName = columnName;\n    this.initialSortColumn = undefined;\n  }\n\n  private initializeDefaults() {\n    const isWithoutData = (typeof this.rows === 'undefined' || this.rows.length === 0);\n    if (typeof this.columnsConfig === 'undefined' && !isWithoutData) {\n      [this.columnsLookup, this._columnsConfig] = this.tableInitService.detectColumnConfiguration(this.rows);\n    }\n    if (typeof this.visibleColumns === 'undefined' && typeof this.columnsLookup !== 'undefined') {\n      this.visibleColumns = Object.keys(this.columnsLookup);\n    }\n  }\n}\n","import {TdComponent} from './../td/td.component';\nimport {TableInitService} from './../table-init.service';\nimport {ColumnConfig, ColumnLookup} from '../types';\nimport {ColumnState} from './../column-state.class';\nimport {EditCellEvent, RowClickEvent} from '../events';\nimport {TableComponent} from './../table.component';\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  TemplateRef,\n} from '@angular/core';\n\n@Component({\n  selector: '[iw-tbody]',\n  templateUrl: 'tbody.component.html',\n  styleUrls: ['./tbody.component.css']\n})\nexport class TbodyComponent implements AfterViewInit {\n  // NOTE: not sure weather this should be a public API\n  @Input() addingColumnIndex: number;\n  @Input() set inlineEditingEnabled(isEditable: boolean) {\n    this.isEditable = isEditable;\n  };\n  @Input() set rows(rows: any[]) {\n    this._rows = rows;\n  }\n  @Input() set columnsConfig(columnsConfig: ColumnConfig[]) {\n    this._columnsConfig = columnsConfig;\n  }\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    this._visibleColumns = visibleColumns;\n  }\n\n  @Output() rowClick: EventEmitter<RowClickEvent> = new EventEmitter<RowClickEvent>();\n  @Output() editCell: EventEmitter<EditCellEvent> = new EventEmitter<EditCellEvent>();\n\n  customTemplate: boolean = false;\n\n  private _columnsConfig: ColumnConfig[];\n  private _columnsLookup: ColumnLookup;\n  private _rows: any[];\n  private _visibleColumns: string[];\n  private isEditable: boolean;\n  private tableComponent: TableComponent;\n  private customCells: string[] = [];\n  private cellTemplates: {[columnId: string]: TemplateRef<any>} = {};\n\n  constructor(\n    private elementRef: ElementRef,\n    private tableInitService: TableInitService,\n    @Optional() tableComponent: TableComponent\n  ) {\n    this.tableComponent = tableComponent;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // In our template we have N elements, where N is number of rows.\n      // If there is more elements, they must be projected => custom template is used\n      this.customTemplate = this.elementRef.nativeElement.children.length > this.rows.length;\n    });\n  }\n\n  get rows(): any[] {\n    return this._rows || this.delegateInput('rows', []);\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig || this.delegateInput('columnsConfig', []);\n  };\n\n  get visibleColumns(): string[] {\n    return this._visibleColumns || this.delegateInput('visibleColumns', []);\n  };\n\n  get inlineEditingEnabled() {\n    return this.isEditable || this.delegateInput('inlineEditingEnabled', false);\n  }\n\n  get columnsLookup(): ColumnLookup {\n    let columnsLookup = this._columnsLookup ||\n      (this.tableComponent && this.tableComponent.columnsLookup);\n    if (!columnsLookup) {\n      columnsLookup = this.tableInitService.columnsConfig2Lookup(this.columnsConfig);\n      this._columnsLookup = columnsLookup;\n    }\n    return columnsLookup;\n  }\n\n  get changeColumnVisibility(): boolean {\n    return this.tableComponent.changeColumnVisibility;\n  }\n\n  isSorted(column: ColumnState, direction: string) {\n    return this.tableComponent.isSorted(column, direction);\n  }\n\n  column(columnName: string): ColumnState {\n    return this.columnsLookup[columnName];\n  }\n\n  onRowClicked(rowIndex: number, rowObject: any) {\n    this.rowClick.emit({\n      rowIndex,\n      rowObject\n    });\n  }\n\n  onEditCell(tdComponent: TdComponent, rowIndex: number) {\n    if (!tdComponent.isChanged || !tdComponent.column) { return; }\n    let editCellEvent: EditCellEvent = {\n      newValue: tdComponent.content,\n      column: tdComponent.column.config.id,\n      rowObject: tdComponent.row,\n      rowIndex\n    };\n    this.editCell.emit(editCellEvent);\n  }\n\n  private delegateInput<T>(propertyName: string, defaultValue: T): T {\n    if (!this.tableComponent) {\n      // console.warn('TbodyComponent: No parent \"tableComponent\" was found.' +\n      //   'Input \"' + propertyName + '\" was also not provided.');\n      return defaultValue;\n    }\n\n    return (<any>this.tableComponent)[propertyName] as T;\n  }\n}\n","import {ColumnConfig, ColumnLookup} from './../types';\nimport { SortColumnEvent, ToggleSubfieldEvent} from '../events';\nimport {ColumnState} from './../column-state.class';\nimport {TableComponent} from './../table.component';\nimport {TableInitService} from '../table-init.service';\n\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Optional,\n} from '@angular/core';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: '[iw-thead]',\n  templateUrl: 'thead.component.html',\n  styleUrls: ['./thead.component.css']\n})\nexport class TheadComponent implements OnInit, AfterViewInit {\n  @Input() set columnsConfig(columnsConfig) {\n    if (this.tableComponent) {\n      this.tableComponent.columnsConfig = columnsConfig;\n    } else {\n      this._columnsConfig = columnsConfig;\n    }\n  }\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    if (this.tableComponent) {\n      this.tableComponent.visibleColumns = visibleColumns;\n    } else {\n      this._visibleColumns = visibleColumns;\n      // NOTE: what about output events?\n    }\n  }\n\n  @Output() addColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() removeColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() sortColumn: EventEmitter<SortColumnEvent> = new EventEmitter<SortColumnEvent>();\n  @Output() addingColumn: EventEmitter<number> = new EventEmitter<number>();\n  @Output() reorderColumns: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() toggleSubfield: EventEmitter<ToggleSubfieldEvent> = new EventEmitter<ToggleSubfieldEvent>();\n\n  lastColumnComboboxActive: boolean = false;\n  addingColumnIndex: number | null;\n  draggedColumnId: string | null;\n  customTemplate: boolean = false;\n\n  private _columnsConfig: ColumnConfig[];\n  private _visibleColumns: string[];\n  private _reorderingEnabled: boolean;\n  private _columnsLookup: ColumnLookup;\n  private tableComponent: TableComponent | undefined;\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef, // needed to trigger change detection on jquery ui's callbacks\n    private tableInitService: TableInitService,\n    @Optional() tableComponent: TableComponent\n  ) {\n    this.tableComponent = tableComponent;\n  }\n\n  get changeColumnVisibility(): boolean {\n    if (!this.tableComponent) { return false; }\n    return this.tableComponent.changeColumnVisibility;\n  }\n\n  ngOnInit() {\n    if (this.reorderingEnabled) {\n      this.initializeSortable();\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.customTemplate = this.elementRef.nativeElement.children.length !== 1;\n    });\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig || this.delegateInput('columnsConfig', []);\n  }\n\n  get columnsLookup(): ColumnLookup {\n    let columnsLookup = this._columnsLookup ||\n      (this.tableComponent && this.tableComponent.columnsLookup);\n    if (typeof columnsLookup === 'undefined') {\n      columnsLookup = this.tableInitService.columnsConfig2Lookup(this.columnsConfig);\n      this._columnsLookup = columnsLookup;\n    }\n    return columnsLookup;\n  }\n\n  get visibleColumns(): string[] {\n    return this._visibleColumns || this.delegateInput('visibleColumns', []);\n  }\n\n  get reorderingEnabled(): boolean {\n    return this._reorderingEnabled || this.delegateInput('reorderingEnabled', false);\n  }\n\n  get isLastAddingColumnVisible() {\n    return this.lastColumnComboboxActive || this.addingColumnIndex === this.visibleColumns.length;\n  }\n\n  isSorted(column: ColumnState, direction: string) {\n    if (!this.tableComponent) { return false; }\n    return this.tableComponent.isSorted(column, direction);\n  }\n\n  column(columnName: string): ColumnState {\n    return this.columnsLookup[columnName];\n  }\n\n  selectNewColumn(item: {value: string}, atPosition: number) {\n    this.addingColumnIndex = null;\n    this.lastColumnComboboxActive = false;\n\n    if (typeof atPosition !== 'undefined') {\n      // the order changed\n      this.visibleColumns = [\n        ...this.visibleColumns.slice(0, atPosition),\n        item.value,\n        ...this.visibleColumns.slice(atPosition),\n      ];\n    } else {\n      this.visibleColumns = [...this.visibleColumns, item.value];\n    }\n    this.addColumn.emit(item.value);\n    // this.visibleColumnsOutput.emit(this.visibleColumns);\n  }\n\n  toggleCombobox() {\n    this.lastColumnComboboxActive = !this.lastColumnComboboxActive;\n    if (!this.lastColumnComboboxActive) { return; }\n    setTimeout(() => {\n      jQuery(this.elementRef.nativeElement).scrollLeft(99999);\n    }, 0);\n  }\n\n  onAddCombobox(index: number) {\n    this.lastColumnComboboxActive = false;\n    this.addingColumnIndex = index;\n    this.addingColumn.emit(index);\n  }\n\n  onSortColumn(sortEvent: SortColumnEvent) {\n    if (this.tableComponent) { this.tableComponent.sortedColumnName = sortEvent.column; }\n    this.sortColumn.emit(sortEvent);\n  }\n\n  onToggleSubfield(toggleSubfieldEvent: ToggleSubfieldEvent) {\n    this.toggleSubfield.emit(toggleSubfieldEvent);\n  }\n\n  private initializeSortable() {\n    jQuery(this.elementRef.nativeElement).sortable({\n      cursor: 'move',\n      axis: 'x',\n      tolerance: 'pointer',\n      items: '.drag-column',\n      handle: '.col-label',\n      update: () => {\n        this.draggedColumnId = '';\n        let sortedIDs = jQuery( this.elementRef.nativeElement )\n          .sortable( 'toArray', {\n            attribute: 'data-col-ref'\n          });\n        this.visibleColumns = sortedIDs;\n        this.reorderColumns.emit(sortedIDs);\n        this.changeDetectorRef.detectChanges();\n      },\n      // NOTE: provide additional information about dragging\n      // when dragging is started\n      // activate: (event: any, ui: any) => {\n      //   this.draggedColumnId = ui.item.attr('data-col-ref');\n      // },\n      // stop: () => {\n      //   this.draggedColumnId = '';\n      //   this.changeDetectorRef.detectChanges();\n      // }\n    });\n    jQuery(this.elementRef.nativeElement).disableSelection();\n  }\n\n  private delegateInput<T>(propertyName: string, defaultValue: T): T {\n    if (!this.tableComponent) {\n      // console.warn('TheadComponent: No parent \"tableComponent\" was found.' +\n      //   'Input \"' + propertyName + '\" was also not provided.');\n      return defaultValue;\n    }\n\n    return (<any>this.tableComponent)[propertyName] as T;\n  }\n}\n","import {ColumnConfig, SortDirection, SortingMode} from './../types';\nimport {ColumnState} from './../column-state.class';\nimport {SortColumnEvent, ToggleSubfieldEvent} from '../events';\nimport {TableComponent} from './../table.component';\n\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Optional,\n} from '@angular/core';\n\n@Component({\n  selector: '[iw-th]',\n  templateUrl: 'th.component.html',\n  styleUrls: ['./th.component.css']\n})\nexport class ThComponent implements OnInit {\n  @Input() column: ColumnState;\n  @Input() changeVisibility: boolean = true;\n  @Input() set rowsSortingMode(rowsSortingMode: SortingMode) {\n    this._rowsSortingMode = rowsSortingMode;\n  };\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    if (this.tableComponent) {\n      this.tableComponent.visibleColumns = visibleColumns;\n    } else {\n      this._visibleColumns = visibleColumns;\n    }\n  };\n\n  @Input() set columnsConfig(columnsConfig: ColumnConfig[]) {\n    this._columnsConfig = columnsConfig;\n  };\n\n  @Output() removeColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() sortColumn: EventEmitter<SortColumnEvent> = new EventEmitter<SortColumnEvent>();\n  @Output() addCombobox: EventEmitter<number> = new EventEmitter<number>();\n  @Output() toggleSubfield: EventEmitter<ToggleSubfieldEvent> = new EventEmitter<ToggleSubfieldEvent>();\n\n  private _rowsSortingMode: SortingMode;\n  private _visibleColumns: string[];\n  private _columnsConfig: ColumnConfig[];\n  private tableComponent: TableComponent | undefined;\n\n  // TODO: some properties could be taken from thead component, same for add-column.component\n  constructor(@Optional() tableComponent: TableComponent) {\n    this.tableComponent = tableComponent;\n  }\n\n  ngOnInit() {\n  }\n\n  get rowsSortingMode(): SortingMode {\n    return this._rowsSortingMode || this.delegateInput('rowsSortingMode', <SortingMode>'default');\n  }\n\n  get visibleColumns(): string[] {\n    return this._visibleColumns || this.delegateInput('visibleColumns', []);\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig || this.delegateInput('columnsConfig', []);\n  }\n\n  get hasAllColumnsVisble(): boolean {\n    return this.visibleColumns.length === this.columnsConfig.length;\n  }\n\n  get isLastColumn(): boolean {\n    return this.visibleColumns.length !== 1;\n  }\n\n  isSortingDisabled(column: ColumnState) {\n    if (!column) { return; }\n    return this.rowsSortingMode === 'disabled' || column.config.sortingDisabled;\n  }\n\n  showSortIcon (column: ColumnState, sortType: string, direction: string): boolean {\n    if (!column) { return false; }\n    if (this.isSortingDisabled(column)) { return false; }\n    return (column.config.sortType === sortType && column.currentSortDirection === direction);\n  }\n\n  onSortColumn (column: ColumnState, direction?: string) {\n    if (this.isSortingDisabled(column)) { return; }\n    if (!direction) {\n      direction = column.toggleDirection();\n    } else {\n      column.currentSortDirection = <SortDirection>direction;\n    }\n\n    this.sortColumn.emit({\n      column: column.config.id,\n      direction\n    });\n  }\n\n  onRemoveColumn(columnName: string) {\n    let columnIndex = this.visibleColumns.indexOf(columnName);\n    this.visibleColumns = [\n      ...this.visibleColumns.slice(0, columnIndex),\n      ...this.visibleColumns.slice(columnIndex + 1),\n    ];\n    this.removeColumn.emit(columnName);\n  }\n\n  onToggleSubfield(column: ColumnState, subfieldName: string) {\n    let subfieldIndex = column.activeFields.indexOf(subfieldName);\n    if (subfieldIndex === -1) {\n      // it was not active, therefore it needs to be actived\n      column.activeFields.push(subfieldName);\n    } else {\n      // it was active, therefore disable it\n      column.activeFields.splice(subfieldIndex, 1);\n    }\n    this.toggleSubfield.emit({\n      column: column.config.id,\n      activeSubfields: column.activeFields,\n      toggleSubfield: subfieldName\n    });\n  }\n\n  private delegateInput<T>(propertyName: string, defaultValue: T): T {\n    if (!this.tableComponent) {\n      // console.warn('TheadComponent: No parent \"tableComponent\" was found.' +\n      //   'Input \"' + propertyName + '\" was also not provided.');\n      return defaultValue;\n    }\n\n    return (<any>this.tableComponent)[propertyName] as T;\n  }\n}\n","import {DefaultValuePipe} from './../../pipes/default-value/default-value.pipe';\nimport {DisplayFormatter} from './../types';\nimport {ColumnState} from './../column-state.class';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatColumn'\n})\nexport class FormatColumnPipe implements PipeTransform {\n  constructor(private defaultValuePipe: DefaultValuePipe) {\n\n  }\n\n  transform(value: any, column: ColumnState) {\n    if (!column) { return; }\n    let formattedValue = this.applyFormatters(value, column.config.formatters);\n    return this.defaultValuePipe.transform(formattedValue, 'â');\n  }\n\n  applyFormatters(value: any, formatters: undefined | DisplayFormatter[]): any {\n    if (!formatters) {\n      return value;\n    }\n    return formatters.reduce((currentValue, formatter) => {\n      let args = formatter.arguments || [];\n      return formatter.transform(currentValue, ...args);\n    }, value);\n  }\n}\n","import {ColumnState} from './../column-state.class';\nimport {FormatColumnPipe} from './../pipes/format-column.pipe';\n\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: '[iw-td]',\n  templateUrl: 'td.component.html',\n  styleUrls: ['./td.component.css'],\n  providers: [FormatColumnPipe]\n})\nexport class TdComponent implements OnInit {\n  @Input() column: ColumnState;\n  @Input() row: any;\n\n  @ViewChild('contentDiv', { static: false }) contentDiv: ElementRef;\n\n  constructor(private formatColumnPipe: FormatColumnPipe) { }\n\n  ngOnInit() {\n  }\n\n  get cellValue(): any {\n    if (!this.column) { return; }\n    return this.row[this.column.config.id];\n  }\n\n  get content(): string {\n    return this.contentDiv.nativeElement.textContent;\n  }\n\n  get isChanged(): boolean {\n    return this.contentDiv.nativeElement.textContent.trim() !== this.formattedValue;\n  }\n\n  get hasSubfields() {\n    if (!this.column) { return; }\n    return this.column.config.subFields && this.column.config.subFields.length > 0;\n  }\n\n  get formattedValue() {\n    if (!this.column) { return; }\n    return this.formatColumnPipe.transform(this.cellValue, this.column);\n  }\n}\n","import {ColumnConfig} from '../types';\nimport {Select2Option, Select2CategorizedOption, Select2ItemOption} from '../../select2/select2.component';\nimport {TableComponent} from './../table.component';\n\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n@Component({\n  selector: 'iw-add-column',\n  templateUrl: 'add-column.component.html',\n  styleUrls: ['add-column.component.css']\n})\nexport class AddColumnComponent implements OnChanges {\n  @Input() visibleColumns: string[];\n  @Input() open: boolean = true;\n\n  @Output() selected: EventEmitter<{value: string}> = new EventEmitter<{value: string}>();\n  @Output() close = new EventEmitter();\n\n  items: Select2Option[];\n  value: string | null = null;\n\n  constructor (private tableComponent: TableComponent) {\n  }\n\n  ngOnChanges(arg: any) {\n    let columns: ColumnConfig[] = this.columnsNotVisibleInTable();\n    // this.items = this.tableComponent.columnsForAddingFn(options);\n    this.items = this.categorizeColumns(columns);\n  }\n\n  onSelected(value: string): void {\n    if (!value) { return; }\n    this.selected.emit({value});\n    setTimeout(() => {\n      this.value = null;\n    }, 0);\n  }\n\n  columnsNotVisibleInTable(): ColumnConfig[] {\n    let items: ColumnConfig[] = [];\n    this.tableComponent.columnsConfig.forEach((columnConfig: ColumnConfig) => {\n      if (this.visibleColumns.indexOf(columnConfig.id) === -1) {\n        columnConfig.text = columnConfig.text || columnConfig.id;\n        items.push(columnConfig);\n      }\n    });\n    return items;\n  }\n\n  categorizeColumns(columns: ColumnConfig[]): Select2Option[] {\n    let itemsWithCategory = columns.filter((item) => typeof item.category !== 'undefined');\n    if (itemsWithCategory.length === 0) {\n      // no categories present\n      return <Select2ItemOption[]>columns;\n    }\n    let category2Index: {[categoryId: string]: number} = {};\n    let index = 0;\n    let options: Select2CategorizedOption[] = [];\n    columns.forEach((column: ColumnConfig) => {\n      let categoryId = (column.category && column.category.id) || 'Other';\n      let categoryIndex = category2Index[categoryId];\n      if (typeof categoryIndex === 'undefined') {\n        category2Index[categoryId] = index++;\n        let option: Select2CategorizedOption = {\n          text: (column.category && column.category.text) || categoryId,\n          children: [<Select2ItemOption>column]\n        };\n        options.push(option);\n      } else {\n        options[categoryIndex].children.push(<Select2ItemOption>column);\n      }\n    });\n    return options;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  forwardRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\ndeclare var jQuery: any;\n\nexport type Select2Option = Select2ItemOption | Select2CategorizedOption;\n\nexport interface Select2ItemOption {\n  text: string;\n  id: string;\n}\n\nexport interface Select2CategorizedOption {\n  text: string;\n  children: Select2ItemOption[];\n}\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Select2Component),\n    multi: true\n};\n\n@Component({\n  selector: 'iw-select2',\n  templateUrl: 'select2.component.html',\n  styleUrls: ['select2.component.css'],\n  providers: [ CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR ]\n})\nexport class Select2Component implements OnInit, OnChanges, ControlValueAccessor, OnDestroy {\n  // data for select2 dropdown\n  @Input() items: Array<Select2Option>;\n  @Input() tags: boolean;\n  @Input() multiple: boolean;\n  @Input() placeholder: string = '';\n  @Input() open: boolean = false;\n\n  @Output() close = new EventEmitter();\n\n  currentValue: string;\n  private element: any;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.updateData();\n  }\n\n  ngOnChanges(arg: any) {\n    this.updateData();\n  }\n\n  ngOnDestroy() {\n    this.removeSelect2();\n  }\n\n  // implements ControlValueAccessor\n  // write model value into view\n  writeValue(v: string) {\n    this.currentValue = v;\n    if (!this.element) { return; }\n    this.element.val(v).trigger('change');\n  }\n\n  onChange = (v: string) => {};\n  registerOnChange(fn: (v: string) => {}): void {\n    this.onChange = fn;\n  }\n  onTouched = () => {};\n  registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\n\n  onClose(e: Event) {\n    this.close.emit(e);\n  }\n\n  removeSelect2() {\n    if (this.element) {\n      this.element.off('select2:select');\n      this.element.select2('destroy');\n      this.element.remove();\n      this.element = null;\n    }\n  }\n\n  updateData() {\n    this.removeSelect2();\n    // replace a select as a work-around for data not replacing correctly, it was always appending more data\n    this.element = jQuery('<select></select>').attr('style', 'width:200px');\n    this.element.on('select2:select', (e: Event) => {\n      this.currentValue = this.element.val();\n      this.onChange(this.currentValue);\n    });\n    this.element.on('select2:close', (e: Event) => {\n      this.onClose(e);\n    });\n    this.elementRef.nativeElement.appendChild(this.element.get(0));\n\n    this.element.select2({\n      data: this.items || Â [],\n      // allowClear: true,\n      placeholder: this.placeholder,\n      multiple: this.multiple,\n      tags: this.tags\n    });\n    this.element.val(this.currentValue).trigger('change');\n    if (this.open) {\n      this.element.select2('open');\n    }\n  }\n}\n","import {TableComponent} from './table.component';\nimport {TheadComponent} from './thead/thead.component';\nimport {TbodyComponent} from './tbody/tbody.component';\nimport {AddColumnComponent} from './add-column/add-column.component';\nimport {Select2Component} from './../select2/select2.component';\nimport {TdComponent} from './td/td.component';\nimport {ThComponent} from './th/th.component';\nimport {PipesModule} from './../pipes/';\nimport {DefaultValuePipe} from './../pipes/default-value/default-value.pipe';\nimport {FormatColumnPipe} from './pipes/format-column.pipe';\nimport {I18nService} from './../services/i18n.service';\n\nimport {TableSortingService} from './table-sorting.service';\nimport {TableInitService} from './table-init.service';\n\nimport { DropdownModule} from 'ngx-dropdown';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    PipesModule,\n    CommonModule,\n    FormsModule,\n    DropdownModule\n  ],\n  declarations: [\n    TableComponent,\n    TheadComponent,\n    TbodyComponent,\n    AddColumnComponent,\n    Select2Component,\n    TdComponent,\n    ThComponent,\n    FormatColumnPipe,\n  ],\n  exports: [\n    TableComponent,\n    TheadComponent,\n    TbodyComponent,\n    AddColumnComponent,\n    Select2Component,\n    TdComponent,\n    ThComponent,\n    FormatColumnPipe,\n  ],\n  providers: [\n    TableSortingService,\n    TableInitService,\n    I18nService,\n    DefaultValuePipe\n  ]\n})\nexport class TableModule { }\n"]}