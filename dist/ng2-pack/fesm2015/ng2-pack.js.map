{"version":3,"file":"ng2-pack.js","sources":["ng://ng2-pack/lib/inline-editable/inline-editable.directive.ts","ng://ng2-pack/lib/inline-editable/inline-editable.module.ts","ng://ng2-pack/lib/pipes/default-value/default-value.pipe.ts","ng://ng2-pack/lib/locales/en.ts","ng://ng2-pack/lib/locales/de.ts","ng://ng2-pack/lib/services/i18n.service.ts","ng://ng2-pack/lib/pipes/t/t.pipe.ts","ng://ng2-pack/lib/pipes/pipes.module.ts","ng://ng2-pack/lib/sortable/sortable-item.directive.ts","ng://ng2-pack/lib/sortable/sortable.module.ts","ng://ng2-pack/lib/table/events.ts","ng://ng2-pack/lib/table/types.ts","ng://ng2-pack/lib/table/column-state.class.ts","ng://ng2-pack/lib/table/table-init.service.ts","ng://ng2-pack/lib/table/table-sorting.service.ts","ng://ng2-pack/lib/table/table.component.ts","ng://ng2-pack/lib/table/tbody/tbody.component.ts","ng://ng2-pack/lib/table/thead/thead.component.ts","ng://ng2-pack/lib/table/th/th.component.ts","ng://ng2-pack/lib/table/pipes/format-column.pipe.ts","ng://ng2-pack/lib/table/td/td.component.ts","ng://ng2-pack/lib/table/add-column/add-column.component.ts","ng://ng2-pack/lib/select2/select2.component.ts","ng://ng2-pack/lib/table/table.module.ts"],"sourcesContent":["import {\n  ElementRef,\n  EventEmitter,\n  Directive,\n  Input,\n  Output,\n  HostBinding,\n  HostListener,\n  Renderer,\n} from '@angular/core';\n\nenum KeyCodes {\n  Enter = 13,\n  Escape = 27\n}\n\n@Directive({\n  selector: '[iwInlineEditable]'\n})\nexport class InlineEditableDirective {\n  @Input('iwInlineEditable') set iwInlineEditable(isEnabled: boolean) {\n    this.contentEditable = isEnabled;\n  };\n\n  // @Input() set triggerEvent(triggerEvent: string) {\n  //   if (!this.element) {\n  //     return;\n  //   }\n  //   console.log(triggerEvent, this.element);\n  //   this.renderer.listen(this.element.nativeElement, triggerEvent, () => {\n  //     this.contentEditable = true;\n  //   });\n  // }\n\n  @Output() onEnter: EventEmitter<string> = new EventEmitter<string>();\n\n  @HostBinding('attr.contenteditable') contentEditable: boolean = true;\n\n  originalContent: string;\n\n  @HostListener('focus') startEditing() {\n    this.originalContent = this.content;\n  }\n\n  @HostListener('keydown', ['$event']) keyPressed(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.stopPropagation();\n        this.onEnter.emit(this.content);\n        break;\n\n      case KeyCodes.Escape:\n        this.cancelEditing();\n        break;\n    }\n  }\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer\n  ) { }\n\n  get isChanged(): boolean {\n    return this.originalContent !== this.content;\n  }\n\n  get content(): string {\n    return this.element.nativeElement.textContent.trim();\n  }\n\n  set content(content: string) {\n    this.renderer.setElementProperty(this.element, 'innerText', content);\n  }\n\n  cancelEditing() {\n    this.content = this.originalContent;\n  }\n}\n","import {InlineEditableDirective} from './inline-editable.directive';\n\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  declarations: [\n    InlineEditableDirective\n  ],\n  exports: [\n    InlineEditableDirective,\n  ]\n})\nexport class InlineEditableModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'defaultValue'\n})\nexport class DefaultValuePipe implements PipeTransform {\n  transform(value: any, defaultValue: any = 'â', args?: any): any {\n    if (typeof value !== 'undefined' && !this.isEmptyString(value)) {\n      return value;\n    }\n    return defaultValue;\n  }\n\n  private isEmptyString(value: any) {\n    return typeof value === 'string' && value.trim() === '';\n  }\n}\n","import {I18nLocale} from '../services/i18n.service';\n\nexport const en = {\n  table: {\n    sort: 'Sort',\n    addLeft: 'Add column to the left',\n    addRight: 'Add column to the right',\n    subFields: 'Subfields in the column',\n    removeColumn: 'Remove this column',\n    typeToSearch: 'Type to search',\n  }\n} as I18nLocale;\n","import {I18nLocale} from '../services/i18n.service';\n\nexport const de = {\n  table: {\n    sort: 'Sortieren',\n    addLeft: 'Spalte links hinzufÃ¼gen',\n    addRight: 'Spalte rechts hinzufÃ¼gen',\n    subFields: 'Felder in der Spalte',\n    removeColumn: 'Diese Spalte entfernen',\n    typeToSearch: 'Tippen zum Suchen',\n  }\n} as I18nLocale;\n","import { Injectable } from '@angular/core';\nimport { en } from '../locales/en';\nimport { de } from '../locales/de';\n\nexport interface I18nLocales {\n  [language: string]: I18nLocale;\n}\n\nexport interface I18nLocale {\n  [key: string]: I18nLocale | string;\n}\n\n@Injectable()\nexport class I18nService {\n  language: string = 'en';\n  translations: I18nLocales = {\n    en,\n    de\n  };\n\n  constructor() { }\n\n  get(nestedKey: string, language: string = this.language): string {\n    if (!this.translations) {\n      console.error('I18nService is used without initialization with translations');\n      return '';\n    }\n    let keys: string[] = nestedKey.split('.');\n    let translation: string = '';\n    try {\n      translation = <string>keys\n        .reduce((translationTree: I18nLocale, key: string) => {\n          return translationTree[key];\n        }, this.translations[language]);\n    } catch (err) {\n      console.error(`Unknown key \"${nestedKey}\" was used!`);\n    }\n    return translation;\n  }\n}\n","import {I18nService} from './../../services/i18n.service';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 't'\n})\nexport class TPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value: any, args?: any): any {\n    return this.i18nService.get(value);\n  }\n\n}\n","import {DefaultValuePipe} from './default-value/default-value.pipe';\nimport {TPipe} from './t/t.pipe';\n\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  declarations: [\n    DefaultValuePipe,\n    TPipe,\n  ],\n  exports: [\n    DefaultValuePipe,\n    TPipe,\n  ]\n})\nexport class PipesModule {}\n","import {\n  ElementRef,\n  Directive,\n  HostBinding,\n  HostListener,\n  Input\n} from '@angular/core';\n\nlet dragSource: SortableItemDirective;\nlet originalNextSibling: Element | undefined;\n\n@Directive({\n  selector: '[iwSortableItem]'\n})\nexport class SortableItemDirective {\n  @HostBinding('attr.draggable') draggable: boolean = true;\n  @HostBinding('attr.droppable') droppable: boolean = true;\n  @Input() dropArea: string = 'defaultDropArea';\n\n  private lastEvent: string = '';\n\n  constructor(public elementRef: ElementRef) {\n  }\n\n  // draggable\n  @HostListener('dragstart', ['$event'])\n  onDragStart(dragEvent: DragEvent) {\n    if (!dragEvent.dataTransfer) {\n      console.warn('no data transfer');\n      return;\n    }\n    dragEvent.dataTransfer.effectAllowed = 'move';\n    dragSource = this;\n    originalNextSibling = this.elementRef.nativeElement.nextSibling;\n  }\n\n  // droppable\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(dragEvent: DragEvent) {\n    this.lastEvent = 'dragenter';\n    dragEvent.preventDefault();\n    if (dragSource !== this && dragSource.dropArea === this.dropArea) {\n      // updating is only preview, it is undone if it is not finished by the drop event\n      this.updateElements(dragSource, this);\n    }\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver(dragOverEvent: DragEvent) {\n    // necessary for drop event to be triggered\n    dragOverEvent.preventDefault();\n  }\n\n  // droppable\n  @HostListener('dragend', ['$event'])\n  onDragEnd(dragEvent: DragEvent) {\n    if (this.lastEvent === 'drop') { return; }\n    if (dragSource.dropArea === this.dropArea && typeof originalNextSibling !== 'undefined') {\n      originalNextSibling.parentNode!.insertBefore(dragSource.elementRef.nativeElement, originalNextSibling);\n      originalNextSibling = undefined;\n    }\n  }\n\n  // droppable\n  @HostListener('drop', ['$event'])\n  onDrop(dropEvent: DragEvent) {\n    this.lastEvent = 'drop';\n    dropEvent.stopPropagation();\n    if (this === dragSource) {\n      return;\n    }\n    // this.updateElements(dragSource, this);\n    originalNextSibling = undefined;\n  }\n\n  private updateElements = (dragged: SortableItemDirective, droppedOn: SortableItemDirective) => {\n    let parent: Element = droppedOn.elementRef.nativeElement.parentNode;\n    let draggedEl: Element = dragged.elementRef.nativeElement;\n    let dropEl: Element = droppedOn.elementRef.nativeElement;\n    let draggedIndex = Array.prototype.indexOf.call(parent.children, draggedEl);\n    let dropIndex = Array.prototype.indexOf.call(parent.children, dropEl);\n    if (draggedIndex === dropIndex) {\n      // do nothing\n    } else if (draggedIndex < dropIndex) {\n      parent.insertBefore(draggedEl, dropEl.nextSibling || dropEl);\n    } else {\n      parent.insertBefore(draggedEl, dropEl.previousSibling || dropEl);\n    }\n  }\n}\n","import { SortableItemDirective } from './sortable-item.directive';\n\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n  declarations: [\n    SortableItemDirective\n  ],\n  exports: [\n    SortableItemDirective\n  ]\n})\nexport class SortableModule {}\n","export interface EditCellEvent {\n  newValue: any;\n  column: string;\n  rowObject: any;\n  rowIndex: number;\n};\n\nexport interface SortColumnEvent {\n  column: string;\n  direction: string;\n};\n\nexport interface ToggleSubfieldEvent {\n  column: string;\n  toggleSubfield: string;\n  activeSubfields: string[];\n};\n\nexport interface RowClickEvent {\n  rowIndex: number;\n  rowObject: any;\n}\n","import {ColumnState} from './column-state.class';\nimport {PipeTransform} from '@angular/core';\n\nexport type SortDirection = 'asc' | 'desc';\n\nexport type SortingMode = 'default' | 'external' | 'disabled';\n\nexport interface ColumnConfig {\n  id: string;\n  text?: string;\n  sortingDisabled?: boolean;\n  formatters?: DisplayFormatter[];\n  subFields?: SubFieldConfig[];\n  category?: {\n    id: string;\n    text: string;\n  };\n  sortCompare?: (a: any, b: any) => number;\n  sortType?: string; // either 'string' or 'number'\n  initialSortDirection?: SortDirection;  // either 'asc' or 'desc'\n  data?: any; // for user-specific data\n}\n\nexport interface SubFieldConfig {\n  id: string;\n  text: string;\n  isVisible: boolean;\n}\n\nexport interface ColumnLookup {\n  [columnName: string]: ColumnState;\n}\n\nexport type cmpFun = (a: any, b: any) => number;\n\nexport interface CompareFunctions {\n  [sortType: string]: cmpFun;\n}\n\nexport interface DisplayFormatter extends PipeTransform {\n  arguments?: Array<any>;\n}\n\nexport interface Row {\n  [property: string]: any;\n}\n","import {ColumnConfig, SortDirection} from './types';\n\nexport class ColumnState {\n  // config is read-only, state is stored in other properties\n  constructor (\n    public readonly config: ColumnConfig,\n    private _currentSortDirection?: SortDirection,\n    public activeFields: string[] = []\n  ) {}\n\n  get initialSortDirection(): SortDirection {\n    return this.config.initialSortDirection || 'asc';\n  }\n\n  get currentSortDirection(): SortDirection {\n    return this._currentSortDirection || 'asc';\n  }\n\n  set currentSortDirection(direction: SortDirection) {\n    this._currentSortDirection = direction;\n  }\n\n  toggleDirection() {\n    if (!this._currentSortDirection) {\n      this.currentSortDirection = this.initialSortDirection;\n    } else {\n      this.currentSortDirection = this.currentSortDirection === 'desc' ? 'asc' : 'desc';\n    }\n    return this.currentSortDirection;\n  }\n\n}\n","import {ColumnState} from './column-state.class';\nimport {ColumnConfig, ColumnLookup, Row} from './types';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TableInitService {\n\n  constructor() { }\n\n  detectColumnConfiguration(rows: Row[]): [ColumnLookup, ColumnConfig[]] {\n    let columnsLookup = this.detectColumnLookup(rows);\n    return [columnsLookup, this.columnsLookup2Config(columnsLookup)];\n  }\n\n  detectColumnLookup(rows: Row[]): ColumnLookup {\n    let columnsLookup: ColumnLookup = {};\n    rows.forEach(row => {\n      Object.keys(row).forEach(key => {\n        if (typeof columnsLookup[key] === 'undefined') {\n          let columnConfig: ColumnConfig = {\n            id: key,\n            sortType: typeof row[key],\n            sortingDisabled: false,\n            initialSortDirection: 'asc'\n          };\n          columnsLookup[key] = new ColumnState(columnConfig);\n        }\n      });\n    });\n    return columnsLookup;\n  }\n\n  columnsConfig2Lookup(columnsConfig: ColumnConfig[]): ColumnLookup {\n    let columnsLookup: ColumnLookup = {};\n    columnsConfig.forEach((columnConfig) => {\n      let activeFields: string[] = [];\n      if (typeof columnConfig.subFields !== 'undefined') {\n        activeFields = columnConfig.subFields\n          .filter((subfield) => subfield.isVisible)\n          .map((subfield) => subfield.id);\n      }\n      let columnState = new ColumnState(columnConfig);\n      columnState.activeFields = activeFields;\n      columnsLookup[columnConfig.id] = columnState;\n    });\n\n    return columnsLookup;\n  }\n\n  columnsLookup2Config(columnsLookup: ColumnLookup): ColumnConfig[] {\n    let columnsConfig: ColumnConfig[] = [];\n    for (let columnName in columnsLookup) {\n      if (columnsLookup.hasOwnProperty(columnName)) {\n        columnsConfig.push(columnsLookup[columnName].config);\n      }\n    }\n\n    return columnsConfig;\n  }\n}\n","import {ColumnState} from './column-state.class';\nimport {CompareFunctions, Row} from './types';\n\nimport {Injectable} from '@angular/core';\n\nexport interface Sorting {\n  sort(rows: Row[], columnState: ColumnState): any[];\n}\n\nexport const sortingCompare: CompareFunctions = {\n  number: (a: number, b: number): number => a - b,\n  string: (a: string, b: string): number => {\n    if (typeof a === 'undefined') { return -1; }\n    return a.localeCompare(b);\n  },\n  other: (a: any, b: any): number => {\n    if (a > b) { return 1; }\n    if (b > a) { return -1; }\n    return 0;\n  }\n};\n\n@Injectable()\nexport class TableSortingService {\n  sort(rows: Row[], columnState: ColumnState) {\n    let sortType = columnState.config.sortType || 'other';\n    let cmpFn = columnState.config.sortCompare || sortingCompare[sortType];\n    if (!cmpFn) {\n      console.warn(`Unsupported sorting type '${sortType}' was used. ` +\n        'Using comparison operators: greater, less and equal (>, <, ===)'\n      );\n      cmpFn = sortingCompare['other'];\n    }\n    rows.sort((a: any, b: any) => cmpFn(a[columnState.config.id], b[columnState.config.id]));\n    if (columnState.currentSortDirection === 'desc') {\n      rows.reverse();\n    }\n\n    return rows;\n  }\n}\n","import {ColumnState} from './column-state.class';\nimport {I18nService} from './../services/i18n.service';\nimport {TableInitService} from './table-init.service';\nimport {ColumnConfig, ColumnLookup, SortDirection, Row, SortingMode} from './types';\nimport { EditCellEvent, RowClickEvent, ToggleSubfieldEvent, SortColumnEvent } from './events';\nimport {TableSortingService} from './table-sorting.service';\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Inject,\n  OnChanges,\n  Output,\n  ViewEncapsulation,\n  InjectionToken,\n} from '@angular/core';\n\ndeclare var jQuery: any;\n\nexport interface TableDefaultValues {\n  reorderingEnabled: boolean;\n  rowsSortingMode: SortingMode;\n  inlineEditingEnabled: boolean;\n  changeColumnVisibility: boolean;\n  language: string;\n}\n\nexport const TableDefaults = new InjectionToken('TableDefaults');\nexport const tableDefaultValues: TableDefaultValues = {\n  reorderingEnabled: true,\n  rowsSortingMode: 'default',\n  inlineEditingEnabled: false,\n  changeColumnVisibility: true,\n  language: 'en',\n};\n\n@Component({\n  selector: 'iw-table',\n  templateUrl: 'table.component.html',\n  styleUrls: ['./table.component.scss'],\n  // TODO: enable encapsulation again\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {provide: TableDefaults, useValue: tableDefaultValues}\n  ]\n})\nexport class TableComponent implements AfterViewInit, OnChanges {\n  @Input() set columnsConfig(columnsConfig: ColumnConfig[]) {\n    this._columnsConfig = columnsConfig;\n    this.columnsLookup = this.tableInitService.columnsConfig2Lookup(this.columnsConfig);\n  }\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    this._visibleColumns = visibleColumns;\n    this.visibleColumnsChange.emit(this._visibleColumns);\n  }\n\n  @Input() rows: Row[];\n  @Input() reorderingEnabled: boolean;\n  @Input() changeColumnVisibility: boolean;\n  @Input() rowsSortingMode: SortingMode;\n  @Input() inlineEditingEnabled: boolean;\n  // @Input() columnsForAddingFn: (availableColumns: ColumnConfig[]) => any[] = (id) => id\n  @Input() set language(language: string) {\n    this.i18nService.language = language;\n  }\n  @Input() initialSortColumn: string | undefined;\n\n  @Output() addColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() removeColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() sortColumn: EventEmitter<SortColumnEvent> = new EventEmitter<SortColumnEvent>();\n  // @Output() addingColumn: EventEmitter<number> = new EventEmitter<number>();\n  @Output() reorderColumns: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() rowClick: EventEmitter<RowClickEvent> = new EventEmitter<RowClickEvent>();\n  @Output() visibleColumnsChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() editCell: EventEmitter<EditCellEvent> = new EventEmitter<EditCellEvent>();\n  @Output() toggleSubfield: EventEmitter<ToggleSubfieldEvent> = new EventEmitter<ToggleSubfieldEvent>();\n\n  columnsLookup: ColumnLookup;\n  addingColumnIndex: number;\n  customTemplate: boolean = false;\n  sortedColumnName: string | null;\n\n  private _visibleColumns: string[];\n  private _columnsConfig: ColumnConfig[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private tableSortingService: TableSortingService,\n    private tableInitService: TableInitService,\n    private i18nService: I18nService,\n    @Inject(TableDefaults) defaults: any,\n  ) {\n    this.reorderingEnabled =  defaults.reorderingEnabled;\n    this.rowsSortingMode =  defaults.rowsSortingMode;\n    this.inlineEditingEnabled =  defaults.inlineEditingEnabled;\n    this.changeColumnVisibility =  defaults.changeColumnVisibility;\n    this.language = defaults.language;\n  }\n\n  ngOnChanges(arg: any) {\n    this.initializeDefaults();\n    this.initialSort();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.customTemplate = this.elementRef.nativeElement.children.length !== 1;\n    });\n  }\n\n  get visibleColumns() {\n    return this._visibleColumns;\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig;\n  }\n\n  isSorted(column: ColumnState, direction: string) {\n    if (!column) { return; }\n    let isSorted: boolean = column.config.id === this.sortedColumnName;\n    if (!direction) {\n      return isSorted;\n    } else {\n      let directionMatch: boolean = column.currentSortDirection === direction;\n      return isSorted && directionMatch;\n    }\n  }\n\n  onRowClicked(rowClickEvent: RowClickEvent) {\n    this.rowClick.emit(rowClickEvent);\n  }\n\n  onSortColumn(sortEvent: SortColumnEvent) {\n    this.sortColumn.emit(sortEvent);\n    if (this.rowsSortingMode === 'default') {\n      this.sortRows(this.rows, sortEvent);\n    }\n  }\n\n  onAddingColumn(index: number) {\n    this.addingColumnIndex = index;\n    // TODO: this should emit also when adding to the last column!\n    // this.addingColumn.emit(index);\n  }\n\n  onReorderColumns(reorderColumnsEvent: string[]) {\n    this.reorderColumns.emit(reorderColumnsEvent);\n  }\n\n  onToggleSubfield(toggleSubfieldEvent: ToggleSubfieldEvent) {\n    this.toggleSubfield.emit(toggleSubfieldEvent);\n  }\n\n  sortRows(rows: any[], sortEvent: SortColumnEvent): Row[] {\n    let {column, direction} = sortEvent;\n    this.rows = this.tableSortingService.sort(\n      rows, this.columnsLookup[column]\n    );\n    this.sortedColumnName = column;\n    return this.rows;\n  }\n\n  initialSort() {\n    if (!this.initialSortColumn || !this.rows) {\n      return;\n    }\n    let columnName = this.initialSortColumn.slice(1);\n    let sortDirection: string = 'asc';\n    if (this.initialSortColumn[0] === '+') {\n      // pluas at the beginning means 'asc'\n      sortDirection = 'asc';\n\n    } else if (this.initialSortColumn[0] === '-') {\n      // minus at the beginning means 'desc'\n      sortDirection = 'desc';\n    } else {\n      // direction sign is optional\n      columnName = this.initialSortColumn;\n    }\n    let columnState = this.columnsLookup[columnName];\n    if (columnState) {\n      sortDirection = sortDirection || columnState.initialSortDirection;\n      columnState.currentSortDirection = <SortDirection>sortDirection;\n      // initial sort\n      if (this.rowsSortingMode === 'default') {\n        this.sortRows(this.rows, {column: columnName, direction: sortDirection});\n      } else {\n        this.onSortColumn({column: columnName, direction: sortDirection});\n      }\n    } else {\n      console.warn('Missing configuration for column: ' + columnName);\n    }\n    this.sortedColumnName = columnName;\n    this.initialSortColumn = undefined;\n  }\n\n  private initializeDefaults() {\n    const isWithoutData = (typeof this.rows === 'undefined' || this.rows.length === 0);\n    if (typeof this.columnsConfig === 'undefined' && !isWithoutData) {\n      [this.columnsLookup, this._columnsConfig] = this.tableInitService.detectColumnConfiguration(this.rows);\n    }\n    if (typeof this.visibleColumns === 'undefined' && typeof this.columnsLookup !== 'undefined') {\n      this.visibleColumns = Object.keys(this.columnsLookup);\n    }\n  }\n}\n","import {TdComponent} from './../td/td.component';\nimport {TableInitService} from './../table-init.service';\nimport {ColumnConfig, ColumnLookup} from '../types';\nimport {ColumnState} from './../column-state.class';\nimport {EditCellEvent, RowClickEvent} from '../events';\nimport {TableComponent} from './../table.component';\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  TemplateRef,\n} from '@angular/core';\n\n@Component({\n  selector: '[iw-tbody]',\n  templateUrl: 'tbody.component.html',\n  styleUrls: ['./tbody.component.css']\n})\nexport class TbodyComponent implements AfterViewInit {\n  // NOTE: not sure weather this should be a public API\n  @Input() addingColumnIndex: number;\n  @Input() set inlineEditingEnabled(isEditable: boolean) {\n    this.isEditable = isEditable;\n  };\n  @Input() set rows(rows: any[]) {\n    this._rows = rows;\n  }\n  @Input() set columnsConfig(columnsConfig: ColumnConfig[]) {\n    this._columnsConfig = columnsConfig;\n  }\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    this._visibleColumns = visibleColumns;\n  }\n\n  @Output() rowClick: EventEmitter<RowClickEvent> = new EventEmitter<RowClickEvent>();\n  @Output() editCell: EventEmitter<EditCellEvent> = new EventEmitter<EditCellEvent>();\n\n  customTemplate: boolean = false;\n\n  private _columnsConfig: ColumnConfig[];\n  private _columnsLookup: ColumnLookup;\n  private _rows: any[];\n  private _visibleColumns: string[];\n  private isEditable: boolean;\n  private tableComponent: TableComponent;\n  private customCells: string[] = [];\n  private cellTemplates: {[columnId: string]: TemplateRef<any>} = {};\n\n  constructor(\n    private elementRef: ElementRef,\n    private tableInitService: TableInitService,\n    @Optional() tableComponent: TableComponent\n  ) {\n    this.tableComponent = tableComponent;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // In our template we have N elements, where N is number of rows.\n      // If there is more elements, they must be projected => custom template is used\n      this.customTemplate = this.elementRef.nativeElement.children.length > this.rows.length;\n    });\n  }\n\n  get rows(): any[] {\n    return this._rows || this.delegateInput('rows', []);\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig || this.delegateInput('columnsConfig', []);\n  };\n\n  get visibleColumns(): string[] {\n    return this._visibleColumns || this.delegateInput('visibleColumns', []);\n  };\n\n  get inlineEditingEnabled() {\n    return this.isEditable || this.delegateInput('inlineEditingEnabled', false);\n  }\n\n  get columnsLookup(): ColumnLookup {\n    let columnsLookup = this._columnsLookup ||\n      (this.tableComponent && this.tableComponent.columnsLookup);\n    if (!columnsLookup) {\n      columnsLookup = this.tableInitService.columnsConfig2Lookup(this.columnsConfig);\n      this._columnsLookup = columnsLookup;\n    }\n    return columnsLookup;\n  }\n\n  get changeColumnVisibility(): boolean {\n    return this.tableComponent.changeColumnVisibility;\n  }\n\n  isSorted(column: ColumnState, direction: string) {\n    return this.tableComponent.isSorted(column, direction);\n  }\n\n  column(columnName: string): ColumnState {\n    return this.columnsLookup[columnName];\n  }\n\n  onRowClicked(rowIndex: number, rowObject: any) {\n    this.rowClick.emit({\n      rowIndex,\n      rowObject\n    });\n  }\n\n  onEditCell(tdComponent: TdComponent, rowIndex: number) {\n    if (!tdComponent.isChanged || !tdComponent.column) { return; }\n    let editCellEvent: EditCellEvent = {\n      newValue: tdComponent.content,\n      column: tdComponent.column.config.id,\n      rowObject: tdComponent.row,\n      rowIndex\n    };\n    this.editCell.emit(editCellEvent);\n  }\n\n  private delegateInput<T>(propertyName: string, defaultValue: T): T {\n    if (!this.tableComponent) {\n      // console.warn('TbodyComponent: No parent \"tableComponent\" was found.' +\n      //   'Input \"' + propertyName + '\" was also not provided.');\n      return defaultValue;\n    }\n\n    return (<any>this.tableComponent)[propertyName] as T;\n  }\n}\n","import {ColumnConfig, ColumnLookup} from './../types';\nimport { SortColumnEvent, ToggleSubfieldEvent} from '../events';\nimport {ColumnState} from './../column-state.class';\nimport {TableComponent} from './../table.component';\nimport {TableInitService} from '../table-init.service';\n\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Optional,\n} from '@angular/core';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: '[iw-thead]',\n  templateUrl: 'thead.component.html',\n  styleUrls: ['./thead.component.css']\n})\nexport class TheadComponent implements OnInit, AfterViewInit {\n  @Input() set columnsConfig(columnsConfig) {\n    if (this.tableComponent) {\n      this.tableComponent.columnsConfig = columnsConfig;\n    } else {\n      this._columnsConfig = columnsConfig;\n    }\n  }\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    if (this.tableComponent) {\n      this.tableComponent.visibleColumns = visibleColumns;\n    } else {\n      this._visibleColumns = visibleColumns;\n      // NOTE: what about output events?\n    }\n  }\n\n  @Output() addColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() removeColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() sortColumn: EventEmitter<SortColumnEvent> = new EventEmitter<SortColumnEvent>();\n  @Output() addingColumn: EventEmitter<number> = new EventEmitter<number>();\n  @Output() reorderColumns: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() toggleSubfield: EventEmitter<ToggleSubfieldEvent> = new EventEmitter<ToggleSubfieldEvent>();\n\n  lastColumnComboboxActive: boolean = false;\n  addingColumnIndex: number | null;\n  draggedColumnId: string | null;\n  customTemplate: boolean = false;\n\n  private _columnsConfig: ColumnConfig[];\n  private _visibleColumns: string[];\n  private _reorderingEnabled: boolean;\n  private _columnsLookup: ColumnLookup;\n  private tableComponent: TableComponent | undefined;\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef, // needed to trigger change detection on jquery ui's callbacks\n    private tableInitService: TableInitService,\n    @Optional() tableComponent: TableComponent\n  ) {\n    this.tableComponent = tableComponent;\n  }\n\n  get changeColumnVisibility(): boolean {\n    if (!this.tableComponent) { return false; }\n    return this.tableComponent.changeColumnVisibility;\n  }\n\n  ngOnInit() {\n    if (this.reorderingEnabled) {\n      this.initializeSortable();\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.customTemplate = this.elementRef.nativeElement.children.length !== 1;\n    });\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig || this.delegateInput('columnsConfig', []);\n  }\n\n  get columnsLookup(): ColumnLookup {\n    let columnsLookup = this._columnsLookup ||\n      (this.tableComponent && this.tableComponent.columnsLookup);\n    if (typeof columnsLookup === 'undefined') {\n      columnsLookup = this.tableInitService.columnsConfig2Lookup(this.columnsConfig);\n      this._columnsLookup = columnsLookup;\n    }\n    return columnsLookup;\n  }\n\n  get visibleColumns(): string[] {\n    return this._visibleColumns || this.delegateInput('visibleColumns', []);\n  }\n\n  get reorderingEnabled(): boolean {\n    return this._reorderingEnabled || this.delegateInput('reorderingEnabled', false);\n  }\n\n  get isLastAddingColumnVisible() {\n    return this.lastColumnComboboxActive || this.addingColumnIndex === this.visibleColumns.length;\n  }\n\n  isSorted(column: ColumnState, direction: string) {\n    if (!this.tableComponent) { return false; }\n    return this.tableComponent.isSorted(column, direction);\n  }\n\n  column(columnName: string): ColumnState {\n    return this.columnsLookup[columnName];\n  }\n\n  selectNewColumn(item: {value: string}, atPosition: number) {\n    this.addingColumnIndex = null;\n    this.lastColumnComboboxActive = false;\n\n    if (typeof atPosition !== 'undefined') {\n      // the order changed\n      this.visibleColumns = [\n        ...this.visibleColumns.slice(0, atPosition),\n        item.value,\n        ...this.visibleColumns.slice(atPosition),\n      ];\n    } else {\n      this.visibleColumns = [...this.visibleColumns, item.value];\n    }\n    this.addColumn.emit(item.value);\n    // this.visibleColumnsOutput.emit(this.visibleColumns);\n  }\n\n  toggleCombobox() {\n    this.lastColumnComboboxActive = !this.lastColumnComboboxActive;\n    if (!this.lastColumnComboboxActive) { return; }\n    setTimeout(() => {\n      jQuery(this.elementRef.nativeElement).scrollLeft(99999);\n    }, 0);\n  }\n\n  onAddCombobox(index: number) {\n    this.lastColumnComboboxActive = false;\n    this.addingColumnIndex = index;\n    this.addingColumn.emit(index);\n  }\n\n  onSortColumn(sortEvent: SortColumnEvent) {\n    if (this.tableComponent) { this.tableComponent.sortedColumnName = sortEvent.column; }\n    this.sortColumn.emit(sortEvent);\n  }\n\n  onToggleSubfield(toggleSubfieldEvent: ToggleSubfieldEvent) {\n    this.toggleSubfield.emit(toggleSubfieldEvent);\n  }\n\n  private initializeSortable() {\n    jQuery(this.elementRef.nativeElement).sortable({\n      cursor: 'move',\n      axis: 'x',\n      tolerance: 'pointer',\n      items: '.drag-column',\n      handle: '.col-label',\n      update: () => {\n        this.draggedColumnId = '';\n        let sortedIDs = jQuery( this.elementRef.nativeElement )\n          .sortable( 'toArray', {\n            attribute: 'data-col-ref'\n          });\n        this.visibleColumns = sortedIDs;\n        this.reorderColumns.emit(sortedIDs);\n        this.changeDetectorRef.detectChanges();\n      },\n      // NOTE: provide additional information about dragging\n      // when dragging is started\n      // activate: (event: any, ui: any) => {\n      //   this.draggedColumnId = ui.item.attr('data-col-ref');\n      // },\n      // stop: () => {\n      //   this.draggedColumnId = '';\n      //   this.changeDetectorRef.detectChanges();\n      // }\n    });\n    jQuery(this.elementRef.nativeElement).disableSelection();\n  }\n\n  private delegateInput<T>(propertyName: string, defaultValue: T): T {\n    if (!this.tableComponent) {\n      // console.warn('TheadComponent: No parent \"tableComponent\" was found.' +\n      //   'Input \"' + propertyName + '\" was also not provided.');\n      return defaultValue;\n    }\n\n    return (<any>this.tableComponent)[propertyName] as T;\n  }\n}\n","import {ColumnConfig, SortDirection, SortingMode} from './../types';\nimport {ColumnState} from './../column-state.class';\nimport {SortColumnEvent, ToggleSubfieldEvent} from '../events';\nimport {TableComponent} from './../table.component';\n\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Optional,\n} from '@angular/core';\n\n@Component({\n  selector: '[iw-th]',\n  templateUrl: 'th.component.html',\n  styleUrls: ['./th.component.css']\n})\nexport class ThComponent implements OnInit {\n  @Input() column: ColumnState;\n  @Input() changeVisibility: boolean = true;\n  @Input() set rowsSortingMode(rowsSortingMode: SortingMode) {\n    this._rowsSortingMode = rowsSortingMode;\n  };\n  @Input() set visibleColumns(visibleColumns: string[]) {\n    if (this.tableComponent) {\n      this.tableComponent.visibleColumns = visibleColumns;\n    } else {\n      this._visibleColumns = visibleColumns;\n    }\n  };\n\n  @Input() set columnsConfig(columnsConfig: ColumnConfig[]) {\n    this._columnsConfig = columnsConfig;\n  };\n\n  @Output() removeColumn: EventEmitter<string> = new EventEmitter<string>();\n  @Output() sortColumn: EventEmitter<SortColumnEvent> = new EventEmitter<SortColumnEvent>();\n  @Output() addCombobox: EventEmitter<number> = new EventEmitter<number>();\n  @Output() toggleSubfield: EventEmitter<ToggleSubfieldEvent> = new EventEmitter<ToggleSubfieldEvent>();\n\n  private _rowsSortingMode: SortingMode;\n  private _visibleColumns: string[];\n  private _columnsConfig: ColumnConfig[];\n  private tableComponent: TableComponent | undefined;\n\n  // TODO: some properties could be taken from thead component, same for add-column.component\n  constructor(@Optional() tableComponent: TableComponent) {\n    this.tableComponent = tableComponent;\n  }\n\n  ngOnInit() {\n  }\n\n  get rowsSortingMode(): SortingMode {\n    return this._rowsSortingMode || this.delegateInput('rowsSortingMode', <SortingMode>'default');\n  }\n\n  get visibleColumns(): string[] {\n    return this._visibleColumns || this.delegateInput('visibleColumns', []);\n  }\n\n  get columnsConfig(): ColumnConfig[] {\n    return this._columnsConfig || this.delegateInput('columnsConfig', []);\n  }\n\n  get hasAllColumnsVisble(): boolean {\n    return this.visibleColumns.length === this.columnsConfig.length;\n  }\n\n  get isLastColumn(): boolean {\n    return this.visibleColumns.length !== 1;\n  }\n\n  isSortingDisabled(column: ColumnState) {\n    if (!column) { return; }\n    return this.rowsSortingMode === 'disabled' || column.config.sortingDisabled;\n  }\n\n  showSortIcon (column: ColumnState, sortType: string, direction: string): boolean {\n    if (!column) { return false; }\n    if (this.isSortingDisabled(column)) { return false; }\n    return (column.config.sortType === sortType && column.currentSortDirection === direction);\n  }\n\n  onSortColumn (column: ColumnState, direction?: string) {\n    if (this.isSortingDisabled(column)) { return; }\n    if (!direction) {\n      direction = column.toggleDirection();\n    } else {\n      column.currentSortDirection = <SortDirection>direction;\n    }\n\n    this.sortColumn.emit({\n      column: column.config.id,\n      direction\n    });\n  }\n\n  onRemoveColumn(columnName: string) {\n    let columnIndex = this.visibleColumns.indexOf(columnName);\n    this.visibleColumns = [\n      ...this.visibleColumns.slice(0, columnIndex),\n      ...this.visibleColumns.slice(columnIndex + 1),\n    ];\n    this.removeColumn.emit(columnName);\n  }\n\n  onToggleSubfield(column: ColumnState, subfieldName: string) {\n    let subfieldIndex = column.activeFields.indexOf(subfieldName);\n    if (subfieldIndex === -1) {\n      // it was not active, therefore it needs to be actived\n      column.activeFields.push(subfieldName);\n    } else {\n      // it was active, therefore disable it\n      column.activeFields.splice(subfieldIndex, 1);\n    }\n    this.toggleSubfield.emit({\n      column: column.config.id,\n      activeSubfields: column.activeFields,\n      toggleSubfield: subfieldName\n    });\n  }\n\n  private delegateInput<T>(propertyName: string, defaultValue: T): T {\n    if (!this.tableComponent) {\n      // console.warn('TheadComponent: No parent \"tableComponent\" was found.' +\n      //   'Input \"' + propertyName + '\" was also not provided.');\n      return defaultValue;\n    }\n\n    return (<any>this.tableComponent)[propertyName] as T;\n  }\n}\n","import {DefaultValuePipe} from './../../pipes/default-value/default-value.pipe';\nimport {DisplayFormatter} from './../types';\nimport {ColumnState} from './../column-state.class';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatColumn'\n})\nexport class FormatColumnPipe implements PipeTransform {\n  constructor(private defaultValuePipe: DefaultValuePipe) {\n\n  }\n\n  transform(value: any, column: ColumnState) {\n    if (!column) { return; }\n    let formattedValue = this.applyFormatters(value, column.config.formatters);\n    return this.defaultValuePipe.transform(formattedValue, 'â');\n  }\n\n  applyFormatters(value: any, formatters: undefined | DisplayFormatter[]): any {\n    if (!formatters) {\n      return value;\n    }\n    return formatters.reduce((currentValue, formatter) => {\n      let args = formatter.arguments || [];\n      return formatter.transform(currentValue, ...args);\n    }, value);\n  }\n}\n","import {ColumnState} from './../column-state.class';\nimport {FormatColumnPipe} from './../pipes/format-column.pipe';\n\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: '[iw-td]',\n  templateUrl: 'td.component.html',\n  styleUrls: ['./td.component.css'],\n  providers: [FormatColumnPipe]\n})\nexport class TdComponent implements OnInit {\n  @Input() column: ColumnState;\n  @Input() row: any;\n\n  @ViewChild('contentDiv', { static: false }) contentDiv: ElementRef;\n\n  constructor(private formatColumnPipe: FormatColumnPipe) { }\n\n  ngOnInit() {\n  }\n\n  get cellValue(): any {\n    if (!this.column) { return; }\n    return this.row[this.column.config.id];\n  }\n\n  get content(): string {\n    return this.contentDiv.nativeElement.textContent;\n  }\n\n  get isChanged(): boolean {\n    return this.contentDiv.nativeElement.textContent.trim() !== this.formattedValue;\n  }\n\n  get hasSubfields() {\n    if (!this.column) { return; }\n    return this.column.config.subFields && this.column.config.subFields.length > 0;\n  }\n\n  get formattedValue() {\n    if (!this.column) { return; }\n    return this.formatColumnPipe.transform(this.cellValue, this.column);\n  }\n}\n","import {ColumnConfig} from '../types';\nimport {Select2Option, Select2CategorizedOption, Select2ItemOption} from '../../select2/select2.component';\nimport {TableComponent} from './../table.component';\n\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n@Component({\n  selector: 'iw-add-column',\n  templateUrl: 'add-column.component.html',\n  styleUrls: ['add-column.component.css']\n})\nexport class AddColumnComponent implements OnChanges {\n  @Input() visibleColumns: string[];\n  @Input() open: boolean = true;\n\n  @Output() selected: EventEmitter<{value: string}> = new EventEmitter<{value: string}>();\n  @Output() close = new EventEmitter();\n\n  items: Select2Option[];\n  value: string | null = null;\n\n  constructor (private tableComponent: TableComponent) {\n  }\n\n  ngOnChanges(arg: any) {\n    let columns: ColumnConfig[] = this.columnsNotVisibleInTable();\n    // this.items = this.tableComponent.columnsForAddingFn(options);\n    this.items = this.categorizeColumns(columns);\n  }\n\n  onSelected(value: string): void {\n    if (!value) { return; }\n    this.selected.emit({value});\n    setTimeout(() => {\n      this.value = null;\n    }, 0);\n  }\n\n  columnsNotVisibleInTable(): ColumnConfig[] {\n    let items: ColumnConfig[] = [];\n    this.tableComponent.columnsConfig.forEach((columnConfig: ColumnConfig) => {\n      if (this.visibleColumns.indexOf(columnConfig.id) === -1) {\n        columnConfig.text = columnConfig.text || columnConfig.id;\n        items.push(columnConfig);\n      }\n    });\n    return items;\n  }\n\n  categorizeColumns(columns: ColumnConfig[]): Select2Option[] {\n    let itemsWithCategory = columns.filter((item) => typeof item.category !== 'undefined');\n    if (itemsWithCategory.length === 0) {\n      // no categories present\n      return <Select2ItemOption[]>columns;\n    }\n    let category2Index: {[categoryId: string]: number} = {};\n    let index = 0;\n    let options: Select2CategorizedOption[] = [];\n    columns.forEach((column: ColumnConfig) => {\n      let categoryId = (column.category && column.category.id) || 'Other';\n      let categoryIndex = category2Index[categoryId];\n      if (typeof categoryIndex === 'undefined') {\n        category2Index[categoryId] = index++;\n        let option: Select2CategorizedOption = {\n          text: (column.category && column.category.text) || categoryId,\n          children: [<Select2ItemOption>column]\n        };\n        options.push(option);\n      } else {\n        options[categoryIndex].children.push(<Select2ItemOption>column);\n      }\n    });\n    return options;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  forwardRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\ndeclare var jQuery: any;\n\nexport type Select2Option = Select2ItemOption | Select2CategorizedOption;\n\nexport interface Select2ItemOption {\n  text: string;\n  id: string;\n}\n\nexport interface Select2CategorizedOption {\n  text: string;\n  children: Select2ItemOption[];\n}\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Select2Component),\n    multi: true\n};\n\n@Component({\n  selector: 'iw-select2',\n  templateUrl: 'select2.component.html',\n  styleUrls: ['select2.component.css'],\n  providers: [ CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR ]\n})\nexport class Select2Component implements OnInit, OnChanges, ControlValueAccessor, OnDestroy {\n  // data for select2 dropdown\n  @Input() items: Array<Select2Option>;\n  @Input() tags: boolean;\n  @Input() multiple: boolean;\n  @Input() placeholder: string = '';\n  @Input() open: boolean = false;\n\n  @Output() close = new EventEmitter();\n\n  currentValue: string;\n  private element: any;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.updateData();\n  }\n\n  ngOnChanges(arg: any) {\n    this.updateData();\n  }\n\n  ngOnDestroy() {\n    this.removeSelect2();\n  }\n\n  // implements ControlValueAccessor\n  // write model value into view\n  writeValue(v: string) {\n    this.currentValue = v;\n    if (!this.element) { return; }\n    this.element.val(v).trigger('change');\n  }\n\n  onChange = (v: string) => {};\n  registerOnChange(fn: (v: string) => {}): void {\n    this.onChange = fn;\n  }\n  onTouched = () => {};\n  registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\n\n  onClose(e: Event) {\n    this.close.emit(e);\n  }\n\n  removeSelect2() {\n    if (this.element) {\n      this.element.off('select2:select');\n      this.element.select2('destroy');\n      this.element.remove();\n      this.element = null;\n    }\n  }\n\n  updateData() {\n    this.removeSelect2();\n    // replace a select as a work-around for data not replacing correctly, it was always appending more data\n    this.element = jQuery('<select></select>').attr('style', 'width:200px');\n    this.element.on('select2:select', (e: Event) => {\n      this.currentValue = this.element.val();\n      this.onChange(this.currentValue);\n    });\n    this.element.on('select2:close', (e: Event) => {\n      this.onClose(e);\n    });\n    this.elementRef.nativeElement.appendChild(this.element.get(0));\n\n    this.element.select2({\n      data: this.items || Â [],\n      // allowClear: true,\n      placeholder: this.placeholder,\n      multiple: this.multiple,\n      tags: this.tags\n    });\n    this.element.val(this.currentValue).trigger('change');\n    if (this.open) {\n      this.element.select2('open');\n    }\n  }\n}\n","import {TableComponent} from './table.component';\nimport {TheadComponent} from './thead/thead.component';\nimport {TbodyComponent} from './tbody/tbody.component';\nimport {AddColumnComponent} from './add-column/add-column.component';\nimport {Select2Component} from './../select2/select2.component';\nimport {TdComponent} from './td/td.component';\nimport {ThComponent} from './th/th.component';\nimport {PipesModule} from './../pipes/pipes.module';\nimport {DefaultValuePipe} from './../pipes/default-value/default-value.pipe';\nimport {FormatColumnPipe} from './pipes/format-column.pipe';\nimport {I18nService} from './../services/i18n.service';\n\nimport {TableSortingService} from './table-sorting.service';\nimport {TableInitService} from './table-init.service';\n\nimport { DropdownModule} from 'ngx-dropdown';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    PipesModule,\n    CommonModule,\n    FormsModule,\n    DropdownModule\n  ],\n  declarations: [\n    TableComponent,\n    TheadComponent,\n    TbodyComponent,\n    AddColumnComponent,\n    Select2Component,\n    TdComponent,\n    ThComponent,\n    FormatColumnPipe\n  ],\n  exports: [\n    TableComponent,\n    TheadComponent,\n    TbodyComponent,\n    AddColumnComponent,\n    Select2Component,\n    TdComponent,\n    ThComponent,\n    FormatColumnPipe\n  ],\n  providers: [\n    TableSortingService,\n    TableInitService,\n    I18nService,\n    DefaultValuePipe\n  ]\n})\nexport class TableModule { }\n"],"names":[],"mappings":"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"}